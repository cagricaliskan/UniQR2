@model IPagedList<UniQR2.Models.User>
@{
    ViewData["Title"] = "Instructor List";
    Layout = "~/Views/Shared/AdminLTE/_Layout.cshtml";
}


<button type="button" class="btn btn-success" data-toggle="modal" data-target="#addUserModal">
    Add new instructor
</button>

<form class="form-inline float-right" method="get">
    <input class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search" name="search" value="@ViewBag.search">
    <button class="btn btn-primary" type="submit">Search</button>
</form>

<br clear="all" />
<br />
<div class="card card-primary">

    <div class="card-header">
        <b>Instructor List</b>
    </div>

    <table class="table table-hover table-bordered table-striped">
        <thead>
            <tr>
                <th style="width:6%">#.</th>
                <th>İsim</th>
                <th>Mail</th>
                <th>Role</th>
                <th class="text-right" style="width:10%">İşlem</th>
            </tr>
        </thead>

        <tbody>
            @{
                int page = ((int)ViewBag.page);
                int counter = (page - 1) * 10;
            }

            @foreach (var item in Model)
            {
                counter++;
                <tr>
                    <td>@counter.</td>
                    <td>@item.FullName</td>
                    <td>@item.Email</td>
                    <td>@item.UserRole</td>
                    <td class="text-right">
                        <a class="btn btn-sm btn-warning" href="#">Düzenle</a> 
                        <a class="btn btn-sm btn-danger" href="#">Sil</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>


    <div class="col-md-12">
        <div class="float-right">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, search = ViewBag.search }), new PagedListRenderOptionsBase
       {
           LiElementClasses = new string[] { "page-item" },
           PageClasses = new string[] { "page-link", "text-bold" },
           DisplayLinkToFirstPage = PagedListDisplayMode.Always,
           DisplayLinkToLastPage = PagedListDisplayMode.Always,
           DisplayLinkToNextPage = PagedListDisplayMode.Always,
           DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
           DisplayLinkToIndividualPages = true
       })
        </div>
    </div>

</div>

@await Component.InvokeAsync("AddUserModal")
